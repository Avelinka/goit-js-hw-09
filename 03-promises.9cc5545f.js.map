{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAU,CACdC,SAAU,gBACVC,SAAU,OACVC,aAAc,OACdC,QAAS,IACTC,cAAc,EACdC,kBAAmB,cAKrB,SAASC,EAAcN,EAAUO,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAET,E,MAAUO,IAEpBG,EAAO,C,SAAEV,E,MAAUO,GAAQ,GAE5BA,EAAM,G,CAZbX,EAAKmB,iBAAiB,UAgBtB,SAAyBC,GACvBA,EAAMC,iBACN,MAAQV,MAAAW,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,cAAcC,SACpD,IAAIC,EAAaC,OAAON,EAAMO,OAC1BC,EAAYF,OAAOL,EAAKM,OACxBE,EAAcH,OAAOJ,EAAOK,OAEhC,GAAIC,GAAa,GAAKH,GAAc,GAAKI,GAAe,EAKtD,YAJAC,EAAAlC,GAASmC,OAAOC,QACd,2DACE/B,GAKN,IAAK,IAAIgC,EAAI,EAAGA,GAAKJ,EAAaI,IAChCzB,EAAcyB,EAAGR,GACdS,MAAK,EAAChC,SAAEA,EAAQO,MAAEA,MACjBqB,EAAAlC,GAASmC,OAAOI,QACd,uBAAqBjC,QAAiBO,MAAWR,EAC/C,IAGLmC,OAAM,EAAClC,SAAEA,EAAQO,MAAEA,MAClBqB,EAAAlC,GAASmC,OAAOC,QACd,sBAAoB9B,QAAeO,MAAWR,EAC9C,IAGNwB,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\nconst options = {\n  position: 'center-bottom',\n  distance: '20px',\n  borderRadius: '20px',\n  timeout: 5000,\n  clickToClose: true,\n  cssAnimationStyle: 'from-right',\n};\n\nform.addEventListener('submit', onPromiseCreate);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onPromiseCreate(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget.elements;\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n\n  if (inputStep <= 0 || inputDelay <= 0 || inputAmount <= 0) {\n    Notiflix.Notify.failure(\n      '❌ Please enter valid values for step, delay, and amount.',\n      options\n    );\n    return;\n  }\n\n  for (let i = 1; i <= inputAmount; i++) {\n    createPromise(i, inputDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          options\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          options\n        );\n      });\n    inputDelay += inputStep;\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$options","position","distance","borderRadius","timeout","clickToClose","cssAnimationStyle","$47d4ff9957288465$var$createPromise","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","step","amount","currentTarget","elements","inputDelay","Number","value","inputStep","inputAmount","$parcel$interopDefault","Notify","failure","i","then","success","catch"],"version":3,"file":"03-promises.9cc5545f.js.map"}