{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAOC,SAASC,cAAc,SAC9BC,EAAU,CACdC,SAAU,gBACVC,SAAU,OACVC,aAAc,OACdC,QAAS,IACTC,cAAc,EACdC,kBAAmB,cAKrB,SAASC,EAAcN,EAAUO,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAET,WAAUO,UAEpBG,EAAO,CAAEV,WAAUO,S,GAEpBA,E,IAZPX,EAAKmB,iBAAiB,UAgBtB,SAAyBC,GACvBA,EAAMC,iBACN,IAAgCC,EAAAF,EAAMG,cAAcC,SAA5CC,EAAwBH,EAAxBX,MAAOe,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACjBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAEhC,GAAIC,EAAY,GAAKH,EAAa,GAAKI,GAAe,EAKpD,YAJAC,EAAAnC,GAASoC,OAAOC,QACd,2DACEhC,GAKN,IAAK,IAAIiC,EAAI,EAAGA,GAAKJ,EAAaI,IAChC1B,EAAc0B,EAAGR,GACdS,MAAK,SAAAC,G,IAAGlC,EAAQkC,EAARlC,SAAUO,EAAK2B,EAAL3B,MACjBsB,EAAAnC,GAASoC,OAAOK,QACd,uBAAwCC,OAAfpC,EAAS,QAAYoC,OAAN7B,EAAM,MAC5CR,E,IAGLsC,OAAM,SAAAH,G,IAAGlC,EAAQkC,EAARlC,SAAUO,EAAK2B,EAAL3B,MAClBsB,EAAAnC,GAASoC,OAAOC,QACd,sBAAqCK,OAAfpC,EAAS,QAAYoC,OAAN7B,EAAM,MAC3CR,E,IAGNyB,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\nconst options = {\n  position: 'center-bottom',\n  distance: '20px',\n  borderRadius: '20px',\n  timeout: 5000,\n  clickToClose: true,\n  cssAnimationStyle: 'from-right',\n};\n\nform.addEventListener('submit', onPromiseCreate);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onPromiseCreate(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget.elements;\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n\n  if (inputStep < 0 || inputDelay < 0 || inputAmount <= 0) {\n    Notiflix.Notify.failure(\n      '❌ Please enter valid values for step, delay, and amount.',\n      options\n    );\n    return;\n  }\n\n  for (let i = 1; i <= inputAmount; i++) {\n    createPromise(i, inputDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          options\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          options\n        );\n      });\n    inputDelay += inputStep;\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$options","position","distance","borderRadius","timeout","clickToClose","cssAnimationStyle","$ce04d3a99e08e73b$var$createPromise","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","inputDelay","Number","value","inputStep","inputAmount","$parcel$interopDefault","Notify","failure","i","then","param","success","concat","catch"],"version":3,"file":"03-promises.75c00dcf.js.map"}